import file_path
from test_system import get_ingredient_stock, get_products, get_main_types, sys
import pytest
from order import *
from online_order_system import *

#test the function search_order
#this function allows the customer to input their orderID and find their order
def test_search_order(sys):
    #create some orders in the system
    #orders are created with a random ID generated by the system
    order1 = sys.create_order()
    order1ID = order1.id;
    order2 = sys.create_order()
    order2ID = order2.id;
    order3 = sys.create_order()
    order3ID = order3.id;
    order4 = sys.create_order()
    order4ID = order4.id;
    
    #four orders in the system
    assert (len(sys.orders) == 4)
    
    #the 4 orders take up the first 4 spots on the order list in the order system
    assert (order1 == sys.orders[0])
    assert (order2 == sys.orders[1])
    assert (order3 == sys.orders[2])
    assert (order4 == sys.orders[3])
    
    #search_order(self, order_id):
    #get the order which has the ID of order 1
    o1 = sys.search_order(order1ID)
    assert(o1 == sys.orders[0])
    #get order 2
    o2 = sys.search_order(order2ID)
    assert(o2 == sys.orders[1])
    #get order 3
    o3 = sys.search_order(order3ID)
    assert(o3 == sys.orders[2])
    #get order 4
    o4 = sys.search_order(order4ID)
    assert(o4 == sys.orders[3])
    #get an order that doesn't exist. This raises a NotFoundException
    with pytest.raises(NotFoundException):
        sys.search_order("123") 
        sys.search_order("") 
        sys.search_order("99999999") 

